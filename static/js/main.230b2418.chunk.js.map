{"version":3,"sources":["components/Header.js","components/CodePeg.js","components/IconButton.js","components/CodePegList.js","components/KeyPeg.js","components/KeyPegGrid.js","components/DecodeGrid.js","components/Button.js","actions/ActionTypes.js","actions/ActionCreators.js","containers/DecodeEditor.js","components/Rules.js","containers/SinglePlayer.js","game/GameSettings.js","game/GameState.js","game/CodeMaker.js","game/CodeBreaker.js","game/GameFlow.js","reducers/Reducers.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","alt","href","src","React","Component","CodePeg","_this$props","this","props","_this$props$value","value","EMPTY_VALUE","_this$props$isClickab","isClickable","_this$props$onClick","onClick","color","colorOf","concat","last","arguments","length","undefined","COLORS","slice","IconButton","icon","_this$props$isDisable","isDisabled","type","title","disabled","ICONS","CodePegList","_this$props$values","values","Object","toConsumableArray","colors","keys","_this$props$isSelecta","isSelectable","_this$props$onSelect","onSelect","_this$props$onCheck","onCheck","_this$props$onDelete","onDelete","_this$props$onRandom","onRandom","_this$props$onReset","onReset","items","i","push","key","src_components_CodePeg","src_components_IconButton","KeyPeg","defaultValue","KEY_NAMES","indexOf","KeyPegGrid","paddedValues","Array","from","rows","src_components_KeyPeg","DecodeGrid","_this$props$remaining","remainingGuessCount","_this$props$guesses","guesses","_this$props$keys","trs","tds","j","src_components_KeyPegGrid","solution","every","Button","label","breaker","CHECK_GUESS","REMOVE_GUESS_TOKEN","NEW_GAME","RANDOM_GUESS","RESET_GUESS","APPEND_GUESS_TOKEN","maker","REMOVE_CODE_TOKEN","RANDOM_CODE","RESET_CODE","SAVE_CODE","APPEND_CODE_TOKEN","newGame","types","DecodeEditor","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","handleReset","handleRandom","handleDelete","handleCheck","handleNewGame","nextGuess","dispatch","actions","_this$props2","_this$props3","_this$props4","maximumGuessCount","prevGuesses","padded","_this$props5","code","prevKeys","broken","gs","ks","active","message","padRight","fill","newGameButton","src_components_Button","role","aria-label","src_components_DecodeGrid","src_components_CodePegList","connect","state","settings","codeLength","Rules","toggleRules","open","setState","SinglePlayer","src_components_Rules","src_containers_DecodeEditor","GameSettings","DEFAULT_CODE_LENGTH","codeMaximumDigit","DEFAULT_CODE_MAXIMUM_DIGIT","DEFAULT_MAXIMUM_GUESS_COUNT","defaultSettings","GameState","CodeMaker","randomDigit","newCode","validateCode","Error","RangeError","validateCodeToken","pop","Math","floor","random","forEach","CodeBreaker","guess","xs","ys","MATCH_KEYS","position","x","shift","y","none","GameFlow","source","item","copied","checkGuess","k","assign","copyAndPush","removeCodeToken","randomCode","createRandom","randomGuess","resetGuess","resetCode","appendCodeToken","savedCode","createManual","game","action","flow","removeGuessToken","appendGuessToken","saveCode","App","store","createStore","gameReducers","es","src_components_Header","src_containers_SinglePlayer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.230b2418.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <a alt=\"About\" href=\"https://github.com/bvelt/mastermind\">About</a>\n        <img className=\"logo\" alt=\"Logo\" src=\"assets/Logo.png\" />\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CodePeg.css';\n\nclass CodePeg extends React.Component {\n  static propTypes = {\n    value: PropTypes.number,\n    isClickable: PropTypes.bool,\n    onClick: PropTypes.func\n  };\n\n  static COLORS = ['blue', 'green', 'orange', 'purple', 'red', 'yellow', 'empty'];\n  static EMPTY_VALUE = 6;\n\n  static defaultValue() {\n    return CodePeg.EMPTY_VALUE;\n  }\n\n  static colors(includeEmpty = false) {\n    const last = includeEmpty ? CodePeg.EMPTY_VALUE + 1 : CodePeg.EMPTY_VALUE;\n    return CodePeg.COLORS.slice(0, last);\n  }\n\n  static colorOf(value) {\n    return CodePeg.COLORS[value];\n  }\n\n  render() {\n    const {\n      value = CodePeg.EMPTY_VALUE,\n      isClickable = false,\n      onClick = () => false\n    } = this.props;\n    const color = CodePeg.colorOf(value);\n    return (\n      <span\n        className={`codePeg codePeg__${color} ${isClickable ? 'codePeg__selectable' : ''}`}\n        onClick={isClickable ? () => onClick(value) : () => false}></span>\n    );\n  }\n}\n\nexport default CodePeg;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './IconButton.css';\n\nclass IconButton extends React.Component {\n  static propTypes = {\n    icon: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool,\n    onClick: PropTypes.func\n  };\n\n  static ICONS = ['check', 'delete', 'random', 'reset'];\n\n  render() {\n    const {\n      icon,\n      isDisabled = false,\n      onClick = () => false\n    } = this.props;\n    return (\n      <button type={'button'}\n        title={icon}\n        className={`iconButton ${icon} ${isDisabled ? 'iconButton__disabled' : ''}`}\n        disabled={isDisabled}\n        onClick={!isDisabled ? onClick : () => false}>\n        <img src={`assets/${icon}.png`} alt={icon}/>\n      </button>\n    );\n  }\n}\n\nexport default IconButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodePeg from './CodePeg';\nimport IconButton from './IconButton';\nimport './CodePegList.css';\n\nclass CodePegList extends React.Component {\n  static propTypes = {\n    values: PropTypes.array,\n    isSelectable: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onCheck: PropTypes.func,\n    onDelete: PropTypes.func,\n    onRandom: PropTypes.func,\n    onReset: PropTypes.func\n  };\n\n  render() {\n    const {\n      values = [...CodePeg.colors().keys()],\n      isSelectable = false,\n      onSelect = () => false,\n      onCheck = () => false,\n      onDelete = () => false,\n      onRandom = () => false,\n      onReset = () => false\n    } = this.props;\n\n    let items = [];\n    for (let i = 0; i < values.length; i++) {\n      items.push(\n        <li key={i}>\n          <CodePeg value={values[i]}\n            isClickable={isSelectable}\n            onClick={onSelect}></CodePeg>\n        </li>\n      );\n    }\n\n    return (\n      <div className=\"codePegList\">\n        <ul className=\"picker\">\n          {items}\n          <li key={values.length} className={'check'}>\n            <IconButton icon={'check'}\n              isDisabled={isSelectable}\n              onClick={onCheck}></IconButton>\n          </li>\n        </ul>\n        <ul className=\"buttons\">\n          <li>\n            <IconButton icon={'random'}\n              onClick={onRandom}></IconButton>\n          </li>\n          <li>\n            <IconButton icon={'delete'}\n              onClick={onDelete}></IconButton>\n          </li>\n          <li>\n            <IconButton icon={'reset'}\n              onClick={onReset}></IconButton>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CodePegList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './KeyPeg.css';\n\nclass KeyPeg extends React.Component {\n  static propTypes = {\n    value: PropTypes.number\n  };\n\n  static KEY_NAMES = ['position', 'color', 'none']\n\n  static defaultValue() {\n    return KeyPeg.KEY_NAMES.indexOf('none');\n  }\n\n  render() {\n    const {\n      value = KeyPeg.defaultValue()\n    } = this.props;\n\n    return (\n      <span className={`keyPeg keyPeg__${KeyPeg.KEY_NAMES[value]}`}></span>\n    );\n  }\n}\n\nexport default KeyPeg;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyPeg from './KeyPeg';\nimport './KeyPegGrid.css';\n\nclass KeyPegGrid extends React.Component {\n  static propTypes = {\n    values: PropTypes.array\n  };\n\n  render() {\n    const {\n      values = []\n    } = this.props;\n\n    const paddedValues = Array.from(values);\n    while (paddedValues.length < 4) {\n      paddedValues.push(KeyPeg.defaultValue());\n    }\n\n    const rows = [];\n    for (let i = 0; i < paddedValues.length; i += 2) {\n      rows.push(\n        <tr key={i}>\n          <td><KeyPeg value={paddedValues[i]}></KeyPeg></td>\n          <td><KeyPeg value={paddedValues[i + 1]}></KeyPeg></td>\n        </tr>\n      );\n    }\n\n    return (\n      <table className=\"keyPegGrid\">\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default KeyPegGrid;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodePeg from './CodePeg';\nimport KeyPegGrid from './KeyPegGrid';\nimport './DecodeGrid.css';\n\n\nclass DecodeGrid extends React.Component {\n  static propTypes = {\n    remainingGuessCount: PropTypes.number,\n    guesses: PropTypes.array,\n    keys: PropTypes.array,\n  };\n\n  render() {\n    const {\n      remainingGuessCount = 0,\n      guesses = [],\n      keys = []\n    } = this.props;\n\n    const trs = [];\n    for (let i = 0; i < guesses.length; i++) {\n      const tds = [];\n\n      tds.push(\n        <td key={`h$(i}`} className=\"rowHead\">{i + 1}</td>\n      );\n\n      for (let j = 0; j < guesses[i].length; j++) {\n        tds.push(\n          <td key={`cp${j}`}><CodePeg value={guesses[i][j]}></CodePeg></td>\n        );\n      }\n\n      tds.push(\n        <td key={`kg${i}`} className=\"keys\"><KeyPegGrid values={keys[i]}></KeyPegGrid></td>\n      );\n\n      const solution = keys[i].every(key => key === 0);\n      trs.push(\n        <tr className={`decodeRow ${solution === true ? 'solution' : ''}`} key={i}>{tds}</tr>\n      );\n    }\n\n    return (\n      <div className=\"decodeGrid\">\n        <p className=\"caption\">{remainingGuessCount} guess{remainingGuessCount !== 1 ? 'es' : ''} remaining</p>\n        <table>\n          <tbody>\n            {trs}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default DecodeGrid;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nclass Button extends React.Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool,\n    onClick: PropTypes.func\n  };\n  render() {\n    const {\n      label,\n      isDisabled = false,\n      onClick = () => false\n    } = this.props;\n    return (\n      <button type={'button'}\n        className={`button ${isDisabled ? 'button__disabled' : ''}`}\n        disabled={isDisabled}\n        onClick={!isDisabled ? onClick : () => false}>\n        {label}\n      </button>\n    );\n  }\n}\n\nexport default Button;","\nexport const breaker = {\n  CHECK_GUESS: \"breaker/check\",\n  REMOVE_GUESS_TOKEN: \"breaker/remove-guess-token\",\n  NEW_GAME: \"breaker/new-game\",\n  RANDOM_GUESS: \"breaker/random-guess\",\n  RESET_GUESS: \"breaker/reset-guess\",\n  APPEND_GUESS_TOKEN: \"breaker/append-guess-token\"\n};\n\nexport const maker = {\n  REMOVE_CODE_TOKEN: \"maker/remove-code-token\",\n  RANDOM_CODE: \"maker/random-code\",\n  RESET_CODE: \"maker/reset-code\",\n  SAVE_CODE: \"maker/save-code\",\n  APPEND_CODE_TOKEN: \"maker/append-code-token\"\n};","import * as types from './ActionTypes';\n\nexport function checkGuess(values) {\n  return {\n    type: types.breaker.CHECK_GUESS\n  };\n}\n\nexport function removeGuessToken() {\n  return {\n    type: types.breaker.REMOVE_GUESS_TOKEN\n  };\n}\n\nexport function newGame() {\n  return {\n    type: types.breaker.NEW_GAME\n  };\n}\n\nexport function randomGuess() {\n  return {\n    type: types.breaker.RANDOM_GUESS\n  };\n}\n\nexport function resetGuess() {\n  return {\n    type: types.breaker.RESET_GUESS\n  };\n}\n\nexport function appendGuessToken(value) {\n  return {\n    type: types.breaker.APPEND_GUESS_TOKEN,\n    value: value\n  };\n}\n\nexport function removeCodeToken() {\n  return {\n    type: types.maker.REMOVE_CODE_TOKEN\n  };\n}\n\nexport function randomCode() {\n  return {\n    type: types.maker.RANDOM_CODE\n  };\n}\n\nexport function resetCode() {\n  return {\n    type: types.maker.RESET_CODE\n  };\n}\n\nexport function saveCode() {\n  return {\n    type: types.maker.SAVE_CODE\n  };\n}\n\nexport function appendCodeToken(value) {\n  return {\n    type: types.maker.APPEND_CODE_TOKEN,\n    value: value\n  };\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CodePegList from '../components/CodePegList';\nimport CodePeg from '../components/CodePeg';\nimport KeyPeg from '../components/KeyPeg';\nimport DecodeGrid from '../components/DecodeGrid';\nimport Button from '../components/Button';\nimport * as actions from '../actions/ActionCreators';\nimport './DecodeEditor.css';\n\nclass DecodeEditor extends React.Component {\n\n  static propTypes = {\n    code: PropTypes.array,\n    nextGuess: PropTypes.array,\n    maximumGuessCount: PropTypes.number,\n    length: PropTypes.number,\n    prevGuesses: PropTypes.array,\n    prevKeys: PropTypes.array,\n    onDecodeDone: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleRandom = this.handleRandom.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleNewGame = this.handleNewGame.bind(this);\n  }\n\n  handleSelect(value) {\n    const {\n      nextGuess,\n      length,\n      dispatch\n    } = this.props;\n    if (nextGuess.length < length) {\n      dispatch(actions.appendGuessToken(value));\n    }\n  }\n\n  handleDelete() {\n    const {\n      nextGuess,\n      dispatch\n    } = this.props;\n    if (nextGuess.length > 0) {\n      dispatch(actions.removeGuessToken());\n    }\n  }\n\n  handleReset() {\n    const {\n      nextGuess,\n      dispatch\n    } = this.props;\n    if (nextGuess.length > 0) {\n      dispatch(actions.resetGuess());\n    }\n  }\n\n  handleRandom() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(actions.randomGuess());\n  }\n\n  handleCheck() {\n    const {\n      maximumGuessCount,\n      prevGuesses,\n      nextGuess,\n      length,\n      dispatch\n    } = this.props;\n    if (nextGuess.length === length && prevGuesses.length < maximumGuessCount) {\n      dispatch(actions.checkGuess());\n    }\n  }\n\n  handleNewGame() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(actions.newGame());\n  }\n\n  padRight(items, length, value) {\n    const padded = Array.from(items);\n    while (padded.length < length) {\n      padded.push(value);\n    }\n    return padded;\n  }\n\n  render() {\n    const {\n      code,\n      maximumGuessCount,\n      length,\n      nextGuess,\n      prevGuesses,\n      prevKeys,\n      broken\n    } = this.props;\n\n    let gs = Array.from(prevGuesses);\n    let ks = Array.from(prevKeys);\n\n    const active = !broken && prevGuesses.length < maximumGuessCount;\n    let message = \"You broke the code!\";\n\n    if (!active && !broken) {\n      gs.push(code);\n      ks.push(Array(length).fill(0));\n      message = \"Bummer. You failed.\";\n    } else if (active) {\n      gs.push(this.padRight(nextGuess, length, CodePeg.defaultValue()));\n      ks.push(Array(length).fill(KeyPeg.defaultValue()));\n    }\n\n    while (gs.length < maximumGuessCount) {\n      gs.push(Array(length).fill(CodePeg.defaultValue()));\n      ks.push(Array(length).fill(KeyPeg.defaultValue()));\n    }\n\n    let newGameButton = '';\n    if (!active) {\n      newGameButton = (\n        <div className=\"gameover\">\n          <div className=\"clearfix\">\n            <div className=\"buttons\">\n              <Button key={7} label=\"TRY AGAIN\" onClick={this.handleNewGame}></Button>\n            </div>\n            <div className=\"message\">\n              <span className=\"emoji\" role=\"img\" \n                aria-label=\"Face\">{broken === true ? '😃' : '🙁'}</span>\n              <span className=\"text\">{message}</span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"decodeEditor\">\n        <div className=\"clearfix\">\n          <DecodeGrid key={6}\n            remainingGuessCount={maximumGuessCount - prevGuesses.length}\n            guesses={gs}\n            keys={ks}></DecodeGrid>\n          <CodePegList key={1} values={[...CodePeg.colors().keys()]}\n            isSelectable={active && nextGuess.length < length}\n            onSelect={this.handleSelect}\n            onCheck={this.handleCheck}\n            onDelete={this.handleDelete}\n            onRandom={this.handleRandom}\n            onReset={this.handleReset}></CodePegList>\n        </div>\n        {newGameButton}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    code: state.code,\n    nextGuess: state.nextGuess,\n    maximumGuessCount: state.settings.maximumGuessCount,\n    length: state.settings.codeLength,\n    prevGuesses: state.prevGuesses,\n    prevKeys: state.prevKeys,\n    broken: state.broken\n  };\n}\n\nexport default connect(mapStateToProps)(DecodeEditor);","import React from 'react';\nimport './Rules.css';\n\nclass Rules extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.toggleRules = this.toggleRules.bind(this);\n    this.state = {\n      open: false\n    };\n  }\n\n  toggleRules() {\n    const {\n      open\n    } = this.state;\n    this.setState({\n      open: !open\n    });\n  }\n\n  render() {\n    const {\n      open\n    } = this.state;\n    return (\n      <div className=\"rules\">\n        <span className=\"rulesToggle\" onClick={this.toggleRules}>{open ? 'Hide' : 'Show'} Rules</span>\n        <p className={open ? 'Show' : 'Hide'}>A codemaker has created a secret pattern of 4 colored pegs. A single color can be used more than once. Guess the pegs within 10 turns. A black peg is returned for each peg in your guess that matches the color and position of one peg in the pattern. A gray peg is returned for each peg that is the correct color of one peg in the pattern but the incorrect position. A match is counted only once.</p>\n      </div>\n    );\n  }\n}\n\nexport default Rules;\n","import React from 'react';\nimport DecodeEditor from './DecodeEditor';\nimport Rules from '../components/Rules';\nimport './SinglePlayer.css';\n\nclass SinglePlayer extends React.Component {\n  render() {\n    return (\n      <div className=\"singlePlayer\">\n        <Rules></Rules>\n        <div className=\"content\">\n          <DecodeEditor></DecodeEditor>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SinglePlayer;","\nclass GameSettings {\n\n  static DEFAULT_CODE_LENGTH = 4;\n  static DEFAULT_CODE_MAXIMUM_DIGIT = 5;\n  static DEFAULT_MAXIMUM_GUESS_COUNT = 10;\n\n  constructor(codeLength = GameSettings.DEFAULT_CODE_LENGTH,\n    codeMaximumDigit = GameSettings.DEFAULT_CODE_MAXIMUM_DIGIT,\n    maximumGuessCount = GameSettings.DEFAULT_MAXIMUM_GUESS_COUNT) {\n    this.codeLength = codeLength;\n    this.codeMaximumDigit = codeMaximumDigit;\n    this.maximumGuessCount = maximumGuessCount;\n  }\n}\n\nconst defaultSettings = new GameSettings();\n\nexport default defaultSettings;","import defaultSettings from './GameSettings';\n\nclass GameState {\n  constructor(settings = defaultSettings, code = [], nextGuess = [], prevGuesses = [], prevKeys = [], broken = false) {\n    this.settings = settings;\n    this.code = code;\n    this.nextGuess = nextGuess;\n    this.prevGuesses = prevGuesses;\n    this.prevKeys = prevKeys;\n    this.broken = broken;\n  }\n}\n\nexport default GameState;","import defaultSettings from './GameSettings';\n\nclass CodeMaker {\n\n  constructor(settings = defaultSettings) {\n    this.settings = settings;\n  }\n\n  createRandom() {\n    let code = [];\n    for (let i = 0; i < this.settings.codeLength; i++) {\n      code.push(this.randomDigit());\n    }\n    return code;\n  }\n\n  createManual(code) {\n    const newCode = Array.from(code);\n    this.validateCode(newCode);\n    return newCode;\n  }\n\n  resetCode(code) {\n    if (code.length === 0) {\n      throw new Error(\"Code is aleady empty\");\n    }\n    return [];\n  }\n\n  appendCodeToken(code, value) {\n    if (!(code.length < this.settings.codeLength)) {\n      throw new RangeError(`Code is at maximum length ${this.settings.codeLength}`);\n    }\n    this.validateCodeToken(value);\n    const newCode = Array.from(code);\n    newCode.push(value);\n    return newCode;\n  }\n\n  removeCodeToken(code) {\n    if (code.length === 0) {\n      throw new RangeError(\"Code is already empty\");\n    }\n    const newCode = Array.from(code);\n    newCode.pop();\n    return newCode;\n  }\n\n  randomDigit() {\n    return Math.floor(Math.random() * (this.settings.codeMaximumDigit + 1));\n  }\n\n  validateCodeToken(value) {\n    if (!(value >= 0 && value <= this.settings.codeMaximumDigit)) {\n      throw new Error(`Code token must be digit between 0 and ${this.settings.codeMaximumDigit}`);\n    }\n  }\n\n  validateCode(code) {\n    if (code.length !== this.settings.codeLength) {\n      throw new Error(`Code must be array of length ${this.settings.codeLength}`);\n    }\n    code.forEach(value => {\n      this.validateCodeToken(value);\n    });\n  }\n}\n\nexport default CodeMaker;","import defaultSettings from './GameSettings';\n\nclass CodeBreaker {\n\n  static MATCH_KEYS = {\n    position: 0,\n    color: 1,\n    none: 2\n  }\n\n  constructor(settings = defaultSettings) {\n    this.settings = settings;\n  }\n\n  checkGuess(code, guess) {\n    if (!(code.length === guess.length)) {\n      throw new Error(`Guess length ${guess.length} must be equal to code length ${code.length}`);\n    }\n\n    let key = [];\n    let xs = [];\n    let ys = [];\n\n    for (let i = 0; i < code.length; i++) {\n      if (code[i] === guess[i]) {\n        key.push(CodeBreaker.MATCH_KEYS.position);\n      } else {\n        xs.push(code[i]);\n        ys.push(guess[i]);\n      }\n    }\n\n    while (xs.length > 0) {\n      let x = xs.shift();\n      for (let i = 0; i < ys.length; i++) {\n        let y = ys.shift();\n        if (x === y) {\n          key.push(CodeBreaker.MATCH_KEYS.color);\n          break;\n        } else {\n          ys.push(y);\n        }\n      }\n    }\n\n    while (key.length < code.length) {\n      key.push(CodeBreaker.MATCH_KEYS.none);\n    }\n\n    return key;\n  }\n}\n\nexport default CodeBreaker;","import GameState from './GameState';\nimport CodeMaker from './CodeMaker';\nimport CodeBreaker from './CodeBreaker';\n\nclass GameFlow {\n  constructor(state = new GameState()) {\n    this.state = state;\n  }\n\n  isActive() {\n    return this.state.code.length > 0\n      && this.state.broken !== true\n      && this.state.prevGuesses.length < this.state.settings.maximumGuessCount;\n  }\n\n  isSuccess() {\n    return this.state.broken === true;\n  }\n\n  isFailure() {\n    return this.state.broken !== true\n      && this.state.prevGuesses.length >= this.state.settings.maximumGuessCount;\n  }\n\n  copyAndPush(source, item) {\n    const copied = Array.from(source);\n    copied.push(Array.from(item));\n    return copied;\n  }\n\n  checkGuess() {\n    const breaker = new CodeBreaker(this.state.settings);\n    const key = breaker.checkGuess(this.state.code, this.state.nextGuess);\n    const broken = key.every(k => k === CodeBreaker.MATCH_KEYS.position);\n    this.state = Object.assign({}, this.state, {\n      nextGuess: [],\n      prevGuesses: this.copyAndPush(this.state.prevGuesses, this.state.nextGuess),\n      prevKeys: this.copyAndPush(this.state.prevKeys, key),\n      broken: broken\n    });\n  }\n\n  removeGuessToken() {\n    const maker = new CodeMaker(this.state.settings);\n    const nextGuess = maker.removeCodeToken(this.state.nextGuess);\n    this.state = Object.assign({}, this.state, {\n      nextGuess: nextGuess\n    });\n  }\n\n  newGame() {\n    const maker = new CodeMaker(this.state.settings);\n    const randomCode = maker.createRandom();\n    this.state = new GameState(this.state.settings, randomCode);\n  }\n\n  randomGuess() {\n    const maker = new CodeMaker(this.state.settings);\n    const randomGuess = maker.createRandom();\n    this.state = Object.assign({}, this.state, {\n      nextGuess: randomGuess\n    });\n  }\n\n  resetGuess() {\n    const maker = new CodeMaker(this.state.settings);\n    const resetGuess = maker.resetCode(this.state.nextGuess);\n    this.state = Object.assign({}, this.state, {\n      nextGuess: resetGuess\n    });\n  }\n\n  appendGuessToken(value) {\n    const maker = new CodeMaker(this.state.settings);\n    const nextGuess = maker.appendCodeToken(this.state.nextGuess, value);\n    this.state = Object.assign({}, this.state, {\n      nextGuess: nextGuess\n    });\n  }\n\n  removeCodeToken() {\n    const maker = new CodeMaker(this.state.settings);\n    const code = maker.removeCodeToken(this.state.code);\n    this.state = Object.assign({}, this.state, {\n      code: code\n    });\n  }\n\n  randomCode() {\n    const maker = new CodeMaker(this.state.settings);\n    const randomCode = maker.createRandom();\n    this.state = Object.assign({}, this.state, {\n      code: randomCode\n    });\n  }\n\n  resetCode() {\n    const maker = new CodeMaker(this.state.settings);\n    const resetCode = maker.resetCode(this.state.code);\n    this.state = Object.assign({}, this.state, {\n      code: resetCode\n    });\n  }\n\n  saveCode() {\n    const maker = new CodeMaker(this.state.settings);\n    const savedCode = maker.createManual(this.state.code);\n    this.state = Object.assign({}, this.state, {\n      code: savedCode\n    });\n  }\n\n  appendCodeToken(value) {\n    const maker = new CodeMaker(this.state.settings);\n    const newCode = maker.appendCodeToken(this.state.code, value);\n    this.state = Object.assign({}, this.state, {\n      code: newCode\n    });\n  }\n}\n\nexport default GameFlow;","import * as types from '../actions/ActionTypes';\nimport GameState from '../game/GameState';\nimport GameFlow from '../game/GameFlow';\n\nfunction game(state = new GameState(), action) {\n  const flow = new GameFlow(state);\n  switch (action.type) {\n    case types.breaker.CHECK_GUESS:\n      flow.checkGuess();\n      return flow.state;\n    case types.breaker.REMOVE_GUESS_TOKEN:\n      flow.removeGuessToken();\n      return flow.state;\n    case types.breaker.NEW_GAME:\n      flow.newGame();\n      return flow.state;\n    case types.breaker.RANDOM_GUESS:\n      flow.randomGuess();\n      return flow.state;\n    case types.breaker.RESET_GUESS:\n      flow.resetGuess();\n      return flow.state;\n    case types.breaker.APPEND_GUESS_TOKEN:\n      flow.appendGuessToken(action.value);\n      return flow.state;\n    case types.maker.REMOVE_CODE_TOKEN:\n      flow.removeCodeToken();\n      return flow.state;\n    case types.maker.RANDOM_CODE:\n      flow.randomCode();\n      return flow.state;\n    case types.maker.RESET_CODE:\n      flow.resetCode();\n      return flow.state;\n    case types.maker.SAVE_CODE:\n      flow.saveCode();\n      return flow.state;\n    case types.maker.APPEND_CODE_TOKEN:\n      flow.appendCodeToken(action.value);\n      return flow.state;\n    default:\n      return state;\n  }\n}\n\nexport default game;","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport Header from './components/Header';\nimport SinglePlayer from './containers/SinglePlayer';\nimport gameReducers from './reducers/Reducers';\nimport * as actions from './actions/ActionCreators';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.store = createStore(gameReducers);\n  }\n  componentDidMount() {\n    this.store.dispatch(actions.newGame());\n  }\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <Header></Header>\n          <SinglePlayer></SinglePlayer>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}